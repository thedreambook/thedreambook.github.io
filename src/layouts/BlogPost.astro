---
import "../styles/global.css";

import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Navbar from "../components/Navbar.astro";
import DefaultHeroImage from "../assets/blog-placeholder-5.jpg";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
  </head>

  <body>
    <Navbar />

    <main>
      <article class="flex flex-row justify-center">
        <div class="flex flex-col p-0 md:p-0 md:max-w-[50vw]">
          <div class="hero-image flex align-middle justify-center">
            {
              heroImage ? (
                <Image
                  width={1020}
                  height={510}
                  src={heroImage}
                  alt=""
                  class="rounded-2xl object-cover p-3 max-h-[20vh] md:max-h-[45vh]"
                />
              ) : (
                <Image
                  width={1020}
                  height={510}
                  src={DefaultHeroImage}
                  alt=""
                  class="rounded-2xl object-cover p-3 max-h-[20vh] md:max-h-[45vh]"
                />
              )
            }
          </div>

          <div class="title text-center mt-10 md:mt-20">
            <h1 class="text-4xl">{title}</h1>

            <p class="text-gray-800 text-sm">
              {
                tags
                  ? tags.map((tag, index) => (
                      <>
                        {index > 0 && ", "}
                        <a href={`/tags/${tag}/`} class="text-base italic">
                          #{tag}
                        </a>
                      </>
                    ))
                  : null
              }
            </p>

            <div class="date">
              <FormattedDate date={pubDate} />

              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on
                    <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>

          <hr class="my-14 mx-5" />

          <div class="prose px-3">
            <slot />
          </div>
        </div>
      </article>
    </main>

    <div class="my-20">
      <Footer />
    </div>
  </body>
</html>
