---
import "../styles/global.css";

import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Navbar from "../components/Navbar.astro";
import DefaultHeroImage from "../assets/blog-placeholder-5.jpg";
import BreakpointViewer from "../helpers/BreakpointViewer.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
  </head>

  <body class="p-0 m-0">
    <Navbar />

    <!-- <BreakpointViewer /> -->

    <main class="p-0 m-0">
      <article class="flex flex-row justify-center p-0">
        <div class="flex flex-col p-0 md:p-0 md:max-w-dvw">
          <div class="hero-image flex align-middle justify-center">
            {
              heroImage ? (
                <Image
                  width={1024}
                  height={600}
                  src={heroImage}
                  alt="thumbnail image"
                  class="rounded-[0px] md:rounded-lg object-cover px-0 mx-0 h-[15rem] md:h-[40vh] lg:h-[50vh] xl:h-[50vh]"
                />
              ) : (
                <Image
                  width={1024}
                  height={600}
                  src={DefaultHeroImage}
                  alt="thumbnail image"
                  class="rounded-[0px] md:rounded-lg object-cover px-0 mx-0 h-[15rem] md:h-[40vh] lg:h-[50vh] xl:h-[50vh]"
                />
              )
            }
          </div>

          <div class="title text-center mt-10 md:mt-20">
            <h1 class="text-4xl">{title}</h1>

            <p class="text-gray-800 text-sm">
              {
                tags
                  ? tags.map((tag, index) => (
                      <>
                        {index > 0 && ", "}
                        <a href={`/tags/${tag}/`} class="text-base italic">
                          #{tag}
                        </a>
                      </>
                    ))
                  : null
              }
            </p>

            <div class="date">
              <FormattedDate date={pubDate} />

              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on
                    <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>

          <hr class="my-5 mx-12" />

          <div
            class="prose px-3 mt-8 max-w-[90vw] sm:px-20 md:px-auto lg:px-40 xl:px-52 sm:max-w-[90vw] md:max-w-[90vw] lg:max-w-[80vw]"
          >
            <slot />
          </div>
        </div>
      </article>
    </main>

    <div class="my-20">
      <Footer />
    </div>
  </body>
</html>
